1. N natural soni berilgan. Shu son bo'luvchilarini chiqaruvchi programma 
tuzilsin. Masalan: 30 ning bo'luvchilari 1, 2, 3, 5, 6, 10, 15, 30
<?php
$n = 30;
echo $n . " ning bo'luvchilari: ";
for ($i = 1; $i <= $n; $i++) {
 if ($n % $i == 0) {
 echo $i . " ";
 }
}
?>
2. N natural soni berilgan. Shu son bo'luvchilari yig'indisini chiqaruvchi 
programma tuzilsin. Masalan: N=15, javob: 24 (chunki 1+3+5+15)
<?php
function bo'luvchilariYigindisi($n) {
 $sum = 0;
 for ($i = 1; $i <= $n; $i++) {
 if ($n % $i == 0) {
 $sum += $i;
 }
 }
 return $sum;
}
$n = 15;
$result = bo'luvchilariYigindisi($n);
echo "N=$n, Javob: $result";
?>
3. N natural soni berilgan. Shu son mukammal yoki mukammal emasligini 
aniqlovchi programma tuzilsin. O'zidan boshqa bo'luvchilari yig'indisi o'ziga teng 
bo'lgan son mukammal son deyiladi. Masalan: 61+2+3 mukammal son.
<?php
function mukammalson($num) {
 $sum = 0;
 for ($i = 1; $i < $num; $i++) {
 if ($num % $i == 0) {
 $sum += $i;
 }
 }
 return $sum == $num;
}
function main() {
 $number = 28; 
 if (mukammalson ($number)) {
 echo "$number mukammal son.\n";
 } else {
 echo "$number mukammal emas son.\n";
 }
}
main();
?>
4. N natural soni berilgan. Shu songacha bo'lgan mukammal sonlarni chiqaruvchi 
programma tuzilsin.
<?php
function mukammalSonlar($n) {
 for ($i = 1; $i <= $n; $i++) {
 $sum = 0;
 for ($j = 1; $j <= $i / 2; $j++) {
 if ($i % $j == 0) {
 $sum += $j;
 }
 }
 if ($sum == $i) {
 echo $i . " ";
 }
 }
}
$n = 100; // Berilgan son
echo "$n gacha bo'lgan mukammal sonlar: ";
mukammalSonlar($n);
?>
5. N natural soni berilgan. N gacha bo'lgan 3 ga bo'linadigan lekin 5 ga 
bo'linmaydigan sonlarni chiqaruvchi programma tuzilsin
<?php
// N natural soni
$N = 100;
for ($i = 1; $i <= $N; $i++) {
 if ($i % 3 == 0 && $i % 5 != 0) {
 echo $i . "\n";
 }
}
?>
6. N natural soni berilgan. Shu son tub yoki tub emasligini aniqlovchi programma 
tuzilsin Faqat 1 ga va o'ziga bo'linadigan son tub son deyiladi.
<?php
function tubmi($n) {
 if ($n <= 1) {
 return false;
 }
 for ($i = 2; $i <= sqrt($n); $i++) {
 if ($n % $i == 0) {
 return false;
 }
 }
 return true;
}
$N = 17; // N sonini kiriting
if (tubmi($N)) {
 echo "Berilgan son tub son";
} else {
 echo "Berilgan son tub son emas";
}
?>
7. N natural soni berilgan. Shu songacha bo'lgan tub sonlarni chiqaruvchi 
programma tuzilsin.
<?php
function tubsonlar($num){
 if($num <= 1){
 return false;
 }
 for($i = 2; $i <= sqrt($num); $i++){
 if($num % $i == 0){
 return false;
 }
 }
 return true;
}
function tub_sonlar($n){
 for($i = 2; $i <= $n; $i++){
 if(tubsonlar ($i)){
 echo $i . " ";
 }
 }
}
$n = 20; // N soni
tub_sonlar ($n);
?>
8. N natural soni berilgan. N gacha bo'lgan do'st sonlarni chiqaruvchi programma 
tuzilsin. Agar birinchi son bo'luvchilari yig'indisi ikkinchi songa, ikkinchi son 
bo'luvchilari yig'indisi birinchi songa teng bo'lsa, bu sonlar do'st sonlar deyiladi.
<?php
function dost_sonlar($n) {
 for ($i = 1; $i <= $n; $i++) {
 $sum1 = 0;
 $sum2 = 0;
 
 for ($j = 1; $j <= $i / 2; $j++) {
 if ($i % $j == 0) {
 $sum1 += $j;
 }
 }
 for ($k = 1; $k <= $sum1 / 2; $k++) {
 if ($sum1 % $k == 0) {
 $sum2 += $k;
 }
 }
 
 if ($sum2 == $i && $sum1 != $i) {
 echo $i . " va " . $sum1 . " do'st sonlar.\n";
 }
 }
}
$dost_sonlar(100);
?>
